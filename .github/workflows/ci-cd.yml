name: CI/CD with Docker and Droplet

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      - name: List files for debugging
        run: |
          ls -al

      # Step 2: Build Spring Boot application
      - name: Build Spring Boot application
        run: |
        
          ./mvnw clean package -DskipTests

      # Step 3: Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Step 4: Build Docker image for Spring Boot app
      - name: Build Docker image for Spring Boot
        run: |
          docker build -t my-app-image .

      # Step 5: Save Docker image as tar file for transfer
      - name: Save Docker image
        run: |
          docker save my-app-image -o my-app-image.tar

      # Step 6: Transfer Docker image and docker-compose.yml to droplet
      - name: Copy files to droplet
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          password: ${{ secrets.DROPLET_PASSWORD }}
          source: |
            my-app-image.tar
            docker-compose.yml
          target: ~/

      # Step 7: SSH into droplet and deploy
      - name: Deploy application
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          password: ${{ secrets.DROPLET_PASSWORD }}
          script: |
            docker load -i ~/my-app-image.tar
            docker-compose -f ~/docker-compose.yml up -d --build
